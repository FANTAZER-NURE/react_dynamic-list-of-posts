{"version":3,"sources":["components/PostsList/PostsList.tsx","api/api.ts","api/comments.ts","api/posts.ts","components/NewCommentForm/NewCommentForm.tsx","components/PostDetails/PostDetails.tsx","api/users.ts","App.tsx","index.tsx"],"names":["PostsList","React","memo","posts","selectedPostId","handleClick","className","map","post","userId","title","type","onClick","id","BASE_URL","defaultOptions","method","request","url","a","options","fetch","response","json","getPostComments","postId","getUserPosts","getPosts","getPostDetails","NewCommentForm","useState","name","setName","email","setEmail","body","setBody","createComment","data","headers","JSON","stringify","onSubmit","e","preventDefault","placeholder","required","value","onChange","currentTarget","emptyPost","createdAt","updatedAt","PostDetails","setPost","comments","setComments","isCommentsHidden","setIsCommentsHidden","useEffect","deleteComment","commentId","length","comment","getUsers","App","setPosts","users","setUsers","setSelectedPostId","Promise","all","fetchedPosts","fetchedUsers","handleSelect","newPosts","user","ReactDOM","render","document","getElementById"],"mappings":"yVAUaA,EAA6BC,IAAMC,MAAK,YAE/C,IADFC,EACC,EADDA,MAAOC,EACN,EADMA,eAAgBC,EACtB,EADsBA,YAEzB,OACE,sBAAKC,UAAU,YAAf,UACE,wCAEA,oBAAIA,UAAU,kBAAkB,UAAQ,cAAxC,SACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBAAIF,UAAU,kBAAd,UACE,gCACE,6CACaE,EAAKC,OADlB,QAGCD,EAAKE,SAGR,wBACEC,KAAK,SACLL,UAAU,2BACVM,QAAS,WACPP,EAAYG,EAAKK,KAJrB,SAOGT,IAAmBI,EAAKK,GAAK,QAAU,WAfPL,EAAKK,eCnBvCC,EAAW,oCAElBC,EAAiB,CACrBC,OAAQ,OAGGC,EAAO,uCAChB,WAAOC,GAAP,6BAAAC,EAAA,6DAAmBC,EAAnB,+BAAsDL,EAAtD,SACuBM,MAAM,GAAD,OAAIP,GAAJ,OAAeI,GAAOE,GADlD,cACME,EADN,yBAGOA,EAASC,QAHhB,2CADgB,sDCNPC,EAAe,uCAAG,WAAOC,GAAP,eAAAN,EAAA,sEACNE,MAAM,qDAAD,OAAsDI,IADrD,cACvBH,EADuB,yBAGtBA,EAASC,QAHa,2CAAH,sDCEfG,EAAY,uCAAG,WAAOjB,GAAP,eAAAU,EAAA,sEACHF,EAAQ,iBAAD,OAAkBR,IADtB,cACpBa,EADoB,yBAGnBA,GAHmB,2CAAH,sDAMZK,EAAQ,uCAAG,4BAAAR,EAAA,sEACCF,EAAQ,UADT,cAChBK,EADgB,yBAGfA,GAHe,2CAAH,qDAMRM,EAAc,uCAAG,WAAOH,GAAP,eAAAN,EAAA,sEACLF,EAAQ,UAAD,OAAWQ,IADb,cACtBH,EADsB,yBAGrBA,GAHqB,2CAAH,sDCNdO,G,MAAkC5B,IAAMC,MAAK,YAAiB,IAAduB,EAAa,EAAbA,OAC3D,EAAwBK,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEMC,EAAgB,WACpB,OHDmCC,EGCJ,CAC7Bb,SACAM,OACAE,QACAE,QHJGlB,EGAa,YHAA,CAClBD,OAAQ,OACRuB,QAAS,CACP,eAAgB,mCAElBJ,KAAMK,KAAKC,UAAUH,KANC,IAAaA,GGSrC,OACE,uBACEhC,UAAU,iBACVoC,SAAU,SAACC,GACTA,EAAEC,iBACFP,IACAL,EAAQ,IACRE,EAAS,IACTE,EAAQ,KAPZ,UAUE,qBAAK9B,UAAU,aAAf,SACE,uBACEK,KAAK,OACLoB,KAAK,OACLc,YAAY,YACZvC,UAAU,wBACVwC,UAAQ,EACRC,MAAOhB,EACPiB,SAAU,SAACL,GACTX,EAAQW,EAAEM,cAAcF,YAK9B,qBAAKzC,UAAU,aAAf,SACE,uBACEK,KAAK,QACLoB,KAAK,QACLc,YAAY,aACZvC,UAAU,wBACVwC,UAAQ,EACRC,MAAOd,EACPe,SAAU,SAACL,GACTT,EAASS,EAAEM,cAAcF,YAK/B,qBAAKzC,UAAU,aAAf,SACE,0BACEyB,KAAK,OACLc,YAAY,oBACZvC,UAAU,wBACVwC,UAAQ,EACRC,MAAOZ,EACPa,SAAU,SAACL,GACTP,EAAQO,EAAEM,cAAcF,YAK9B,wBACEpC,KAAK,SACLL,UAAU,uCAFZ,kCC5DA4C,G,MAAY,CAChBrC,GAAI,EACJH,MAAO,GACPyB,KAAM,GACNgB,UAAW,6BACXC,UAAW,6BACX3C,OAAQ,IAGG4C,EAA+BpD,IAAMC,MAAK,YAAiB,IAAduB,EAAa,EAAbA,OACxD,EAAwBK,mBAAeoB,GAAvC,mBAAO1C,EAAP,KAAa8C,EAAb,KACA,EAAgCxB,mBAAoB,IAApD,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAAgD1B,oBAAS,GAAzD,mBAAO2B,EAAP,KAAyBC,EAAzB,KAEAC,qBAAU,YACP,+BAAAxC,EAAA,4BAAAA,EAAA,kEACCmC,EADD,SACe1B,EAAeH,GAD9B,8CAEC+B,EAFD,SAEmBhC,EAAgBC,GAFnC,uIAIA,CAACA,EAAQ8B,IAEZ,IAAMK,EAAgB,SAACC,GACrB,OJbyB3C,EIaL,aAAD,OAAc2C,GJZ5B5C,EAAQC,EAAK,CAClBF,OAAQ,WAFgB,IAACE,GIgB3B,OACE,sBAAKZ,UAAU,cAAf,UACE,+CAEA,yBAASA,UAAU,oBAAnB,SACE,4BAAIE,EAAKE,UAGX,0BAASJ,UAAU,wBAAnB,UACE,wBACEK,KAAK,SACLL,UAAU,SACVM,QAAS,WACP8C,GAAqBD,IAJzB,SAOuB,IAApBF,EAASO,OACN,kBACCL,EAAgB,eACPF,EAASO,OADF,4BAEPP,EAASO,OAFF,gBAKrBL,GAEE,oBAAInD,UAAU,oBAAd,SACGiD,EAAShD,KAAI,SAAAwD,GAAO,OACnB,qBAAIzD,UAAU,yBAAd,UACE,wBACEK,KAAK,SACLL,UAAU,oCACVM,QAAS,WACPgD,EAAcG,EAAQlD,KAJ1B,eASA,4BAAIkD,EAAQ5B,kBAOxB,kCACE,qBAAK7B,UAAU,4BAAf,SACE,cAAC,EAAD,CAAgBmB,OAAQjB,EAAKK,eCrF1BmD,EAAQ,uCAAG,4BAAA7C,EAAA,sEACCE,MAAM,2CADP,cAChBC,EADgB,yBAGfA,EAASC,QAHM,2CAAH,qDCuFN0C,EA7EO,WACpB,MAA0BnC,mBAAiB,IAA3C,mBAAO3B,EAAP,KAAc+D,EAAd,KACA,EAA0BpC,mBAAiB,IAA3C,mBAAOqC,EAAP,KAAcC,EAAd,KACA,EAA4CtC,mBAAS,GAArD,mBAAO1B,EAAP,KAAuBiE,EAAvB,KAEAV,qBAAU,YACP,+BAAAxC,EAAA,wCAAAA,EAAA,sEAC4CmD,QAAQC,IAAI,CACrD5C,IACAqC,MAHH,mCACQQ,EADR,KACsBC,EADtB,KAMCP,EAASM,GACTJ,EAASK,GAPV,oGASA,IAEH,IAAMC,EAAY,uCAAG,WAAO3B,GAAP,eAAA5B,EAAA,yDACL,cAAV4B,EADe,iEAKIrB,GAAcqB,GALlB,OAKb4B,EALa,OAOnBT,EAASS,GAPU,2CAAH,sDAoBlB,OACE,sBAAKrE,UAAU,MAAf,UACE,wBAAQA,UAAU,cAAlB,SACE,wDAGE,yBACEA,UAAU,qBACV0C,SAAU,SAACL,GACT+B,EAAa/B,EAAEM,cAAcF,QAHjC,UAME,wBAAQA,MAAM,IAAd,uBACCoB,EAAM5D,KAAI,SAAAqE,GAAI,OACb,wBAAsB7B,MAAO6B,EAAK/D,GAAlC,SAAuC+D,EAAK7C,MAA/B6C,EAAK/D,eAM1B,uBAAMP,UAAU,YAAhB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CACEH,MAAOA,EACPC,eAAgBA,EAChBC,YAnCU,SAAC0C,GAOnBsB,EANItB,IAAU3C,EAMI2C,EALE,QAqCI,IAAnB3C,GAEG,qBAAKE,UAAU,eAAf,SACE,cAAC,EAAD,CAAamB,OAAQrB,aC3EnCyE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b1997897.chunk.js","sourcesContent":["import React from 'react';\nimport { Post } from '../../types/Post';\nimport './PostsList.scss';\n\ntype Props = {\n  posts: Post[],\n  selectedPostId: number,\n  handleClick: (value: number) => void,\n};\n\nexport const PostsList: React.FC<Props> = React.memo((\n  { posts, selectedPostId, handleClick },\n) => {\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\" data-cy=\"postDetails\">\n        {posts.map(post => (\n          <li className=\"PostsList__item\" key={post.id}>\n            <div>\n              <b>\n                {`[User #${post.userId}]:`}\n              </b>\n              {post.title}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"PostsList__button button\"\n              onClick={() => {\n                handleClick(post.id);\n              }}\n            >\n              {selectedPostId === post.id ? 'Close' : 'Open'}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n});\n","export const BASE_URL = 'https://mate.academy/students-api';\n\nconst defaultOptions = {\n  method: 'GET',\n};\n\nexport const request\n  = async (url:string, options: Record<string, unknown> = defaultOptions) => {\n    const response = await fetch(`${BASE_URL}${url}`, options);\n\n    return response.json();\n  };\n\nexport const postMethod = (url:string, data: Record<string, unknown>) => {\n  return request(url, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  });\n};\n\nexport const deleteMethod = (url:string) => {\n  return request(url, {\n    method: 'DELETE',\n  });\n};\n","export const getPostComments = async (postId: number) => {\n  const response = await fetch(`https://mate.academy/students-api/comments?postId=${postId}`);\n\n  return response.json();\n};\n","import { request } from './api';\n\nexport const getUserPosts = async (userId: number) => {\n  const response = await request(`/posts?userId=${userId}`);\n\n  return response;\n};\n\nexport const getPosts = async () => {\n  const response = await request('/posts');\n\n  return response;\n};\n\nexport const getPostDetails = async (postId:number) => {\n  const response = await request(`/posts/${postId}`);\n\n  return response;\n};\n","import React, { useState } from 'react';\nimport { postMethod } from '../../api/api';\nimport './NewCommentForm.scss';\n\ntype Props = {\n  postId: number,\n};\n\nexport const NewCommentForm: React.FC<Props> = React.memo(({ postId }) => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [body, setBody] = useState('');\n\n  const createComment = () => {\n    return postMethod('/comments', {\n      postId,\n      name,\n      email,\n      body,\n    });\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        createComment();\n        setName('');\n        setEmail('');\n        setBody('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          required\n          value={name}\n          onChange={(e) => {\n            setName(e.currentTarget.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          required\n          value={email}\n          onChange={(e) => {\n            setEmail(e.currentTarget.value);\n          }}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          required\n          value={body}\n          onChange={(e) => {\n            setBody(e.currentTarget.value);\n          }}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n});\n","/* eslint-disable no-nested-ternary */\nimport React, { useEffect, useState } from 'react';\nimport { deleteMethod } from '../../api/api';\nimport { getPostComments } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { Comment } from '../../types/Comment';\nimport { Post } from '../../types/Post';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\ntype Props = {\n  postId: number;\n};\n\nconst emptyPost = {\n  id: 0,\n  title: '',\n  body: '',\n  createdAt: 'December 17, 1995 03:24:00',\n  updatedAt: 'December 17, 1995 03:24:00',\n  userId: 0,\n};\n\nexport const PostDetails: React.FC<Props> = React.memo(({ postId }) => {\n  const [post, setPost] = useState<Post>(emptyPost);\n  const [comments, setComments] = useState<Comment[]>([]);\n  const [isCommentsHidden, setIsCommentsHidden] = useState(true);\n\n  useEffect(() => {\n    (async function fetchData() {\n      setPost(await getPostDetails(postId));\n      setComments(await getPostComments(postId));\n    }());\n  }, [postId, comments]);\n\n  const deleteComment = (commentId:number) => {\n    return deleteMethod(`/comments/${commentId}`);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setIsCommentsHidden(!isCommentsHidden);\n          }}\n        >\n          {comments.length === 0\n            ? 'No comments yet'\n            : (isCommentsHidden\n              ? `Show ${comments.length} comments`\n              : `Hide ${comments.length} comments`)}\n        </button>\n\n        {!isCommentsHidden\n          && (\n            <ul className=\"PostDetails__list\">\n              {comments.map(comment => (\n                <li className=\"PostDetails__list-item\">\n                  <button\n                    type=\"button\"\n                    className=\"PostDetails__remove-button button\"\n                    onClick={() => {\n                      deleteComment(comment.id);\n                    }}\n                  >\n                    X\n                  </button>\n                  <p>{comment.body}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={post.id} />\n        </div>\n      </section>\n    </div>\n  );\n});\n","export const getUsers = async () => {\n  const response = await fetch('https://mate.academy/students-api/users');\n\n  return response.json();\n};\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { getPosts, getUserPosts } from './api/posts';\nimport { User } from './types/User';\nimport { getUsers } from './api/users';\nimport { Post } from './types/Post';\n\nconst App: React.FC = () => {\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [users, setUsers] = useState<User[]>([]);\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  useEffect(() => {\n    (async function fetchData() {\n      const [fetchedPosts, fetchedUsers] = await Promise.all([\n        getPosts(),\n        getUsers(),\n      ]);\n\n      setPosts(fetchedPosts);\n      setUsers(fetchedUsers);\n    }());\n  }, []);\n\n  const handleSelect = async (value: string) => {\n    if (value === 'All users') {\n      return;\n    }\n\n    const newPosts = await getUserPosts(+value);\n\n    setPosts(newPosts);\n  };\n\n  const handleClick = (value: number) => {\n    if (value === selectedPostId) {\n      setSelectedPostId(0);\n\n      return;\n    }\n\n    setSelectedPostId(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            onChange={(e) => {\n              handleSelect(e.currentTarget.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            posts={posts}\n            selectedPostId={selectedPostId}\n            handleClick={handleClick}\n          />\n        </div>\n\n        {selectedPostId !== 0\n          && (\n            <div className=\"App__content\">\n              <PostDetails postId={selectedPostId} />\n            </div>\n          )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}